// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: producer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EventService.Protocol {

  /// <summary>Holder for reflection information generated from producer.proto</summary>
  public static partial class ProducerReflection {

    #region Descriptor
    /// <summary>File descriptor for producer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProducerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5wcm9kdWNlci5wcm90bxIIcHJvdG9jb2waDGNvbW1vbi5wcm90byKvAQoP",
            "UHJvZHVjZXJSZXF1ZXN0EhEKCXJlcXVlc3RJZBgBIAEoCRIsCgdjb25uZWN0",
            "GAIgASgLMhkucHJvdG9jb2wuQ29ubmVjdFByb2R1Y2VySAASJgoEc2VuZBgD",
            "IAEoCzIWLnByb3RvY29sLlNlbmRQcm9kdWNlckgAEigKBWNsb3NlGAQgASgL",
            "MhcucHJvdG9jb2wuQ2xvc2VQcm9kdWNlckgAQgkKB3BheWxvYWQiMwoPQ29u",
            "bmVjdFByb2R1Y2VyEhEKCWF1dGhUb2tlbhgBIAEoCRINCgV0b3BpYxgCIAEo",
            "CSI2CgxTZW5kUHJvZHVjZXISJgoGZXZlbnRzGAEgAygLMhYucHJvdG9jb2wu",
            "RXZlbnRNZXNzYWdlIg8KDUNsb3NlUHJvZHVjZXIi/gEKEFByb2R1Y2VyUmVz",
            "cG9uc2USEQoJcmVxdWVzdElkGAEgASgJEjAKCWNvbm5lY3RlZBgCIAEoCzIb",
            "LnByb3RvY29sLlByb2R1Y2VyQ29ubmVjdGVkSAASOgoNcXVvdGFBc3NpZ25l",
            "ZBgDIAEoCzIhLnByb3RvY29sLlByb2R1Y2VyUXVvdGFBc3NpZ25tZW50SAAS",
            "LgoIYWNjZXB0ZWQYBCABKAsyGi5wcm90b2NvbC5Qcm9kdWNlckFjY2VwdGVk",
            "SAASLgoIcmVqZWN0ZWQYBSABKAsyGi5wcm90b2NvbC5Qcm9kdWNlclJlamVj",
            "dGVkSABCCQoHcGF5bG9hZCI7ChFQcm9kdWNlckNvbm5lY3RlZBImCgVxdW90",
            "YRgBIAEoCzIXLnByb3RvY29sLkFzc2lnbmVkUXVvdGEiQQoXUHJvZHVjZXJR",
            "dW90YUFzc2lnbm1lbnQSJgoFcXVvdGEYASABKAsyFy5wcm90b2NvbC5Bc3Np",
            "Z25lZFF1b3RhIhIKEFByb2R1Y2VyQWNjZXB0ZWQiUQoQUHJvZHVjZXJSZWpl",
            "Y3RlZBInCgllcnJvckNvZGUYASABKA4yFC5wcm90b2NvbC5FcnJvckNvZGVz",
            "EhQKDGVycm9yTWVzc2FnZRgCIAEoCTJXCg9Qcm9kdWNlclNlcnZpY2USRAoH",
            "Q29ubmVjdBIZLnByb3RvY29sLlByb2R1Y2VyUmVxdWVzdBoaLnByb3RvY29s",
            "LlByb2R1Y2VyUmVzcG9uc2UoATABQhiqAhVFdmVudFNlcnZpY2UuUHJvdG9j",
            "b2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EventService.Protocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerRequest), global::EventService.Protocol.ProducerRequest.Parser, new[]{ "RequestId", "Connect", "Send", "Close" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ConnectProducer), global::EventService.Protocol.ConnectProducer.Parser, new[]{ "AuthToken", "Topic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.SendProducer), global::EventService.Protocol.SendProducer.Parser, new[]{ "Events" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.CloseProducer), global::EventService.Protocol.CloseProducer.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerResponse), global::EventService.Protocol.ProducerResponse.Parser, new[]{ "RequestId", "Connected", "QuotaAssigned", "Accepted", "Rejected" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerConnected), global::EventService.Protocol.ProducerConnected.Parser, new[]{ "Quota" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerQuotaAssignment), global::EventService.Protocol.ProducerQuotaAssignment.Parser, new[]{ "Quota" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerAccepted), global::EventService.Protocol.ProducerAccepted.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EventService.Protocol.ProducerRejected), global::EventService.Protocol.ProducerRejected.Parser, new[]{ "ErrorCode", "ErrorMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProducerRequest : pb::IMessage<ProducerRequest> {
    private static readonly pb::MessageParser<ProducerRequest> _parser = new pb::MessageParser<ProducerRequest>(() => new ProducerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRequest(ProducerRequest other) : this() {
      requestId_ = other.requestId_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Connect:
          Connect = other.Connect.Clone();
          break;
        case PayloadOneofCase.Send:
          Send = other.Send.Clone();
          break;
        case PayloadOneofCase.Close:
          Close = other.Close.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRequest Clone() {
      return new ProducerRequest(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ConnectProducer Connect {
      get { return payloadCase_ == PayloadOneofCase.Connect ? (global::EventService.Protocol.ConnectProducer) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Connect;
      }
    }

    /// <summary>Field number for the "send" field.</summary>
    public const int SendFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.SendProducer Send {
      get { return payloadCase_ == PayloadOneofCase.Send ? (global::EventService.Protocol.SendProducer) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Send;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.CloseProducer Close {
      get { return payloadCase_ == PayloadOneofCase.Close ? (global::EventService.Protocol.CloseProducer) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Close;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Connect = 2,
      Send = 3,
      Close = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Send, other.Send)) return false;
      if (!object.Equals(Close, other.Close)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Connect) hash ^= Connect.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Send) hash ^= Send.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Close) hash ^= Close.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (payloadCase_ == PayloadOneofCase.Connect) {
        output.WriteRawTag(18);
        output.WriteMessage(Connect);
      }
      if (payloadCase_ == PayloadOneofCase.Send) {
        output.WriteRawTag(26);
        output.WriteMessage(Send);
      }
      if (payloadCase_ == PayloadOneofCase.Close) {
        output.WriteRawTag(34);
        output.WriteMessage(Close);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (payloadCase_ == PayloadOneofCase.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (payloadCase_ == PayloadOneofCase.Send) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Send);
      }
      if (payloadCase_ == PayloadOneofCase.Close) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Connect:
          if (Connect == null) {
            Connect = new global::EventService.Protocol.ConnectProducer();
          }
          Connect.MergeFrom(other.Connect);
          break;
        case PayloadOneofCase.Send:
          if (Send == null) {
            Send = new global::EventService.Protocol.SendProducer();
          }
          Send.MergeFrom(other.Send);
          break;
        case PayloadOneofCase.Close:
          if (Close == null) {
            Close = new global::EventService.Protocol.CloseProducer();
          }
          Close.MergeFrom(other.Close);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            global::EventService.Protocol.ConnectProducer subBuilder = new global::EventService.Protocol.ConnectProducer();
            if (payloadCase_ == PayloadOneofCase.Connect) {
              subBuilder.MergeFrom(Connect);
            }
            input.ReadMessage(subBuilder);
            Connect = subBuilder;
            break;
          }
          case 26: {
            global::EventService.Protocol.SendProducer subBuilder = new global::EventService.Protocol.SendProducer();
            if (payloadCase_ == PayloadOneofCase.Send) {
              subBuilder.MergeFrom(Send);
            }
            input.ReadMessage(subBuilder);
            Send = subBuilder;
            break;
          }
          case 34: {
            global::EventService.Protocol.CloseProducer subBuilder = new global::EventService.Protocol.CloseProducer();
            if (payloadCase_ == PayloadOneofCase.Close) {
              subBuilder.MergeFrom(Close);
            }
            input.ReadMessage(subBuilder);
            Close = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConnectProducer : pb::IMessage<ConnectProducer> {
    private static readonly pb::MessageParser<ConnectProducer> _parser = new pb::MessageParser<ConnectProducer>(() => new ConnectProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectProducer(ConnectProducer other) : this() {
      authToken_ = other.authToken_;
      topic_ = other.topic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectProducer Clone() {
      return new ConnectProducer(this);
    }

    /// <summary>Field number for the "authToken" field.</summary>
    public const int AuthTokenFieldNumber = 1;
    private string authToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthToken != other.AuthToken) return false;
      if (Topic != other.Topic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AuthToken);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectProducer other) {
      if (other == null) {
        return;
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthToken = input.ReadString();
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendProducer : pb::IMessage<SendProducer> {
    private static readonly pb::MessageParser<SendProducer> _parser = new pb::MessageParser<SendProducer>(() => new SendProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendProducer(SendProducer other) : this() {
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendProducer Clone() {
      return new SendProducer(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EventService.Protocol.EventMessage> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::EventService.Protocol.EventMessage.Parser);
    private readonly pbc::RepeatedField<global::EventService.Protocol.EventMessage> events_ = new pbc::RepeatedField<global::EventService.Protocol.EventMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::EventService.Protocol.EventMessage> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendProducer other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseProducer : pb::IMessage<CloseProducer> {
    private static readonly pb::MessageParser<CloseProducer> _parser = new pb::MessageParser<CloseProducer>(() => new CloseProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseProducer(CloseProducer other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseProducer Clone() {
      return new CloseProducer(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseProducer other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ProducerResponse : pb::IMessage<ProducerResponse> {
    private static readonly pb::MessageParser<ProducerResponse> _parser = new pb::MessageParser<ProducerResponse>(() => new ProducerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerResponse(ProducerResponse other) : this() {
      requestId_ = other.requestId_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Connected:
          Connected = other.Connected.Clone();
          break;
        case PayloadOneofCase.QuotaAssigned:
          QuotaAssigned = other.QuotaAssigned.Clone();
          break;
        case PayloadOneofCase.Accepted:
          Accepted = other.Accepted.Clone();
          break;
        case PayloadOneofCase.Rejected:
          Rejected = other.Rejected.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerResponse Clone() {
      return new ProducerResponse(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connected" field.</summary>
    public const int ConnectedFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ProducerConnected Connected {
      get { return payloadCase_ == PayloadOneofCase.Connected ? (global::EventService.Protocol.ProducerConnected) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Connected;
      }
    }

    /// <summary>Field number for the "quotaAssigned" field.</summary>
    public const int QuotaAssignedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ProducerQuotaAssignment QuotaAssigned {
      get { return payloadCase_ == PayloadOneofCase.QuotaAssigned ? (global::EventService.Protocol.ProducerQuotaAssignment) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.QuotaAssigned;
      }
    }

    /// <summary>Field number for the "accepted" field.</summary>
    public const int AcceptedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ProducerAccepted Accepted {
      get { return payloadCase_ == PayloadOneofCase.Accepted ? (global::EventService.Protocol.ProducerAccepted) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Accepted;
      }
    }

    /// <summary>Field number for the "rejected" field.</summary>
    public const int RejectedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ProducerRejected Rejected {
      get { return payloadCase_ == PayloadOneofCase.Rejected ? (global::EventService.Protocol.ProducerRejected) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Rejected;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Connected = 2,
      QuotaAssigned = 3,
      Accepted = 4,
      Rejected = 5,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Connected, other.Connected)) return false;
      if (!object.Equals(QuotaAssigned, other.QuotaAssigned)) return false;
      if (!object.Equals(Accepted, other.Accepted)) return false;
      if (!object.Equals(Rejected, other.Rejected)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Connected) hash ^= Connected.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.QuotaAssigned) hash ^= QuotaAssigned.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Accepted) hash ^= Accepted.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Rejected) hash ^= Rejected.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (payloadCase_ == PayloadOneofCase.Connected) {
        output.WriteRawTag(18);
        output.WriteMessage(Connected);
      }
      if (payloadCase_ == PayloadOneofCase.QuotaAssigned) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotaAssigned);
      }
      if (payloadCase_ == PayloadOneofCase.Accepted) {
        output.WriteRawTag(34);
        output.WriteMessage(Accepted);
      }
      if (payloadCase_ == PayloadOneofCase.Rejected) {
        output.WriteRawTag(42);
        output.WriteMessage(Rejected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (payloadCase_ == PayloadOneofCase.Connected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connected);
      }
      if (payloadCase_ == PayloadOneofCase.QuotaAssigned) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuotaAssigned);
      }
      if (payloadCase_ == PayloadOneofCase.Accepted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accepted);
      }
      if (payloadCase_ == PayloadOneofCase.Rejected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rejected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Connected:
          if (Connected == null) {
            Connected = new global::EventService.Protocol.ProducerConnected();
          }
          Connected.MergeFrom(other.Connected);
          break;
        case PayloadOneofCase.QuotaAssigned:
          if (QuotaAssigned == null) {
            QuotaAssigned = new global::EventService.Protocol.ProducerQuotaAssignment();
          }
          QuotaAssigned.MergeFrom(other.QuotaAssigned);
          break;
        case PayloadOneofCase.Accepted:
          if (Accepted == null) {
            Accepted = new global::EventService.Protocol.ProducerAccepted();
          }
          Accepted.MergeFrom(other.Accepted);
          break;
        case PayloadOneofCase.Rejected:
          if (Rejected == null) {
            Rejected = new global::EventService.Protocol.ProducerRejected();
          }
          Rejected.MergeFrom(other.Rejected);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            global::EventService.Protocol.ProducerConnected subBuilder = new global::EventService.Protocol.ProducerConnected();
            if (payloadCase_ == PayloadOneofCase.Connected) {
              subBuilder.MergeFrom(Connected);
            }
            input.ReadMessage(subBuilder);
            Connected = subBuilder;
            break;
          }
          case 26: {
            global::EventService.Protocol.ProducerQuotaAssignment subBuilder = new global::EventService.Protocol.ProducerQuotaAssignment();
            if (payloadCase_ == PayloadOneofCase.QuotaAssigned) {
              subBuilder.MergeFrom(QuotaAssigned);
            }
            input.ReadMessage(subBuilder);
            QuotaAssigned = subBuilder;
            break;
          }
          case 34: {
            global::EventService.Protocol.ProducerAccepted subBuilder = new global::EventService.Protocol.ProducerAccepted();
            if (payloadCase_ == PayloadOneofCase.Accepted) {
              subBuilder.MergeFrom(Accepted);
            }
            input.ReadMessage(subBuilder);
            Accepted = subBuilder;
            break;
          }
          case 42: {
            global::EventService.Protocol.ProducerRejected subBuilder = new global::EventService.Protocol.ProducerRejected();
            if (payloadCase_ == PayloadOneofCase.Rejected) {
              subBuilder.MergeFrom(Rejected);
            }
            input.ReadMessage(subBuilder);
            Rejected = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProducerConnected : pb::IMessage<ProducerConnected> {
    private static readonly pb::MessageParser<ProducerConnected> _parser = new pb::MessageParser<ProducerConnected>(() => new ProducerConnected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerConnected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerConnected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerConnected(ProducerConnected other) : this() {
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerConnected Clone() {
      return new ProducerConnected(this);
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 1;
    private global::EventService.Protocol.AssignedQuota quota_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.AssignedQuota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerConnected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerConnected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Quota, other.Quota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (quota_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Quota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerConnected other) {
      if (other == null) {
        return;
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          quota_ = new global::EventService.Protocol.AssignedQuota();
        }
        Quota.MergeFrom(other.Quota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (quota_ == null) {
              quota_ = new global::EventService.Protocol.AssignedQuota();
            }
            input.ReadMessage(quota_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProducerQuotaAssignment : pb::IMessage<ProducerQuotaAssignment> {
    private static readonly pb::MessageParser<ProducerQuotaAssignment> _parser = new pb::MessageParser<ProducerQuotaAssignment>(() => new ProducerQuotaAssignment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerQuotaAssignment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerQuotaAssignment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerQuotaAssignment(ProducerQuotaAssignment other) : this() {
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerQuotaAssignment Clone() {
      return new ProducerQuotaAssignment(this);
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 1;
    private global::EventService.Protocol.AssignedQuota quota_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.AssignedQuota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerQuotaAssignment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerQuotaAssignment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Quota, other.Quota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (quota_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Quota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerQuotaAssignment other) {
      if (other == null) {
        return;
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          quota_ = new global::EventService.Protocol.AssignedQuota();
        }
        Quota.MergeFrom(other.Quota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (quota_ == null) {
              quota_ = new global::EventService.Protocol.AssignedQuota();
            }
            input.ReadMessage(quota_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProducerAccepted : pb::IMessage<ProducerAccepted> {
    private static readonly pb::MessageParser<ProducerAccepted> _parser = new pb::MessageParser<ProducerAccepted>(() => new ProducerAccepted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerAccepted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerAccepted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerAccepted(ProducerAccepted other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerAccepted Clone() {
      return new ProducerAccepted(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerAccepted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerAccepted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerAccepted other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ProducerRejected : pb::IMessage<ProducerRejected> {
    private static readonly pb::MessageParser<ProducerRejected> _parser = new pb::MessageParser<ProducerRejected>(() => new ProducerRejected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProducerRejected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EventService.Protocol.ProducerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRejected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRejected(ProducerRejected other) : this() {
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProducerRejected Clone() {
      return new ProducerRejected(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::EventService.Protocol.ErrorCodes errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EventService.Protocol.ErrorCodes ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProducerRejected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProducerRejected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProducerRejected other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            errorCode_ = (global::EventService.Protocol.ErrorCodes) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
